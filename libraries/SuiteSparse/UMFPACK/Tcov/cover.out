================================================================================
================================================================================
umf_analyze.c
================================================================================
================================================================================
  24    222	    #####:  217:	    return (FALSE) ;	/* internal error! */
================================================================================
================================================================================
umf_apply_order.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_assemble.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_assemble_fixq.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_blas3_update.c
================================================================================
================================================================================
  12     78	    #####:   73:	    for (j = 0 ; j < n ; j++)
  12     80	    #####:   75:		Entry u_j = U [j] ;
  12     81	    #####:   76:		if (IS_NONZERO (u_j))
  12     84	    #####:   79:		    c_ij = & C [j*d] ;
  12     85	    #####:   80:		    l_is = & L [0] ;
  12     87	    #####:   82:		    for (i = 0 ; i < m ; i++)
  12     90	    #####:   85:			MULT_SUB (*c_ij, *l_is, u_j) ;
  12     91	    #####:   86:			c_ij++ ;
  12     92	    #####:   87:			l_is++ ;
  12    112	    #####:  107:	    for (s = 0 ; s < k ; s++)
  12    114	    #####:  109:		for (i = s+1 ; i < k ; i++)
  12    116	    #####:  111:		    Entry l_is = LU [i+s*nb] ;
  12    117	    #####:  112:		    if (IS_NONZERO (l_is))
  12    120	    #####:  115:			u_ij = & U [i*dc] ;
  12    121	    #####:  116:			u_sj = & U [s*dc] ;
  12    123	    #####:  118:			for (j = 0 ; j < n ; j++)
  12    126	    #####:  121:			    MULT_SUB (*u_ij, l_is, *u_sj) ;
  12    127	    #####:  122:			    u_ij++ ;
  12    128	    #####:  123:			    u_sj++ ;
  12    147	    #####:  142:	    for (s = 0 ; s < k ; s++)
  12    149	    #####:  144:		for (j = 0 ; j < n ; j++)
  12    151	    #####:  146:		    Entry u_sj = U [j+s*dc] ;
  12    152	    #####:  147:		    if (IS_NONZERO (u_sj))
  12    155	    #####:  150:			c_ij = & C [j*d] ;
  12    156	    #####:  151:			l_is = & L [s*d] ;
  12    158	    #####:  153:			for (i = 0 ; i < m ; i++)
  12    161	    #####:  156:			    MULT_SUB (*c_ij, *l_is, u_sj) ;
  12    162	    #####:  157:			    c_ij++ ;
  12    163	    #####:  158:			    l_is++ ;
================================================================================
================================================================================
umf_build_tuples.c
================================================================================
================================================================================
  24     83	    #####:   78:		return (FALSE) ;	/* out of memory for row tuples */
  24    101	    #####:   96:		return (FALSE) ;	/* out of memory for col tuples */
================================================================================
================================================================================
umf_cholmod.c
================================================================================
================================================================================
  24    190	    #####:  185:        return (FALSE) ;
================================================================================
================================================================================
umf_colamd.c
================================================================================
================================================================================
  12   2264	    #####: 2259:	    tag_mark = clear_mark (n_row, Row) ;
  24   2708	    #####: 2703:		KILL_ROW (r) ;
================================================================================
================================================================================
umf_create_element.c
================================================================================
================================================================================
  12    141	    #####:  136:	    Work->cdeg0 = 1 ;
  12    143	    #####:  138:	    for (e = 1 ; e <= Work->nel ; e++)
  12    145	    #####:  140:		if (E [e])
  12    147	    #####:  142:		    ep = (Element *) (Memory + E [e]) ;
  12    148	    #####:  143:		    ep->cdeg = 0 ;
  12    162	    #####:  157:	    Work->rdeg0 = 1 ;
  12    164	    #####:  159:	    for (e = 1 ; e <= Work->nel ; e++)
  12    166	    #####:  161:		if (E [e])
  12    168	    #####:  163:		    ep = (Element *) (Memory + E [e]) ;
  12    169	    #####:  164:		    ep->rdeg = 0 ;
  24    253	    #####:  248:	    return (FALSE) ;	/* out of memory */
  24    264	    #####:  259:	    return (FALSE) ;	/* out of memory */
  24    440	    #####:  435:		    return (UMF_get_memory (Numeric, Work, 0, r2, c2,do_Fcpos));
  24    543	    #####:  538:		    return (UMF_get_memory (Numeric, Work, 0, r2, c2,do_Fcpos));
================================================================================
================================================================================
umf_extend_front.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_free.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_fsize.c
================================================================================
================================================================================
  24     58	    #####:   53:		frsize = Int_MAX ;
================================================================================
================================================================================
umf_garbage_collection.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_get_memory.c
================================================================================
================================================================================
  24    114	    #####:  109:	newsize = (Int) bsize ;	/* we cannot increase the size beyond bsize */
================================================================================
================================================================================
umf_grow_front.c
================================================================================
================================================================================
  24     93	    #####:   88:	return (FALSE) ;
  24    121	    #####:  116:	double a = 0.9 * sqrt ((Int_MAX / sizeof (Entry)) / s) ;
  24    122	    #####:  117:	fnr2 = MAX (fnr_min, a * fnr2) ;
  24    123	    #####:  118:	fnc2 = MAX (fnc_min, a * fnc2) ;
  24    125	    #####:  120:	newsize = fnr2 * fnc2 ;
  24    127	    #####:  122:	if (fnr2 % 2 == 0) fnr2++ ;
  24    128	    #####:  123:	fnc2 = newsize / fnr2 ;
  24    186	    #####:  181:	    return (FALSE) ;	/* out of memory */
================================================================================
================================================================================
umf_init_front.c
================================================================================
================================================================================
  24     80	    #####:   75:	    return (FALSE) ;
================================================================================
================================================================================
umf_is_permutation.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_kernel.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_kernel_init.c
================================================================================
================================================================================
  24    529	    #####:  524:	return (FALSE) ;	/* pattern changed */
  24    557	    #####:  552:	    return (FALSE) ;	/* pattern changed */
  24    621	    #####:  616:		return (FALSE) ;	/* pattern has changed */
  24    657	    #####:  652:		    return (FALSE) ;	/* pattern has changed */
  24    725	    #####:  720:		    return (FALSE) ;	/* pattern changed */
  24    738	    #####:  733:		    return (FALSE) ;	/* pattern changed */
  24    750	    #####:  745:	    return (FALSE) ;	/* pattern changed */
  24    839	    #####:  834:		    return (FALSE) ;	/* pattern changed */
  24    875	    #####:  870:	    return (FALSE) ;	/* pattern changed */
  24    917	    #####:  912:	    return (FALSE) ;	/* pattern changed */
  24    931	    #####:  926:	    return (FALSE) ;	/* pattern changed */
  24   1043	    #####: 1038:	return (FALSE) ;	/* pattern changed */
================================================================================
================================================================================
umf_kernel_wrapup.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_lhsolve.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_local_search.c
================================================================================
================================================================================
  12    489	    #####:  484:		Entry *Flub = Flublock ;
  12    490	    #####:  485:		for (j = 0 ; j < fnpiv ; j++)
  12    492	    #####:  487:		    Entry Fuj = Flu [j] ;
  12    494	    #####:  489:		    for (i = j+1 ; i < fnpiv ; i++)
  12    497	    #####:  492:			MULT_SUB (Flu [i], Flub [i], Fuj) ;
  12    499	    #####:  494:		    Flub += nb ;
  24    657	    #####:  652:				return (UMFPACK_ERROR_different_pattern) ;
  24    746	    #####:  741:	    return (UMFPACK_ERROR_different_pattern) ;
================================================================================
================================================================================
umf_lsolve.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_ltsolve.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_malloc.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_mem_alloc_element.c
================================================================================
================================================================================
  24     49	    #####:   44:	return (0) ;	/* problem is too large */
================================================================================
================================================================================
umf_mem_alloc_head_block.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_mem_alloc_tail_block.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_mem_free_tail_block.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_mem_init_memoryspace.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_realloc.c
================================================================================
================================================================================
  24     58	    #####:   53:	return ((void *) NULL) ;
================================================================================
================================================================================
umf_report_perm.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_report_vector.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_row_search.c
================================================================================
================================================================================
  24    618	    #####:  613:		    return (UMFPACK_ERROR_different_pattern) ;
  24    664	    #####:  659:				return (UMFPACK_ERROR_different_pattern) ;
  24    751	    #####:  746:		return (UMFPACK_ERROR_different_pattern) ;
================================================================================
================================================================================
umf_scale.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_scale_column.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_set_stats.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_singletons.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_solve.c
================================================================================
================================================================================
  20    677	    #####:  672:			for (i = 0 ; i < n ; i++)
  20    679	    #####:  674:			    SCALE_DIV (Z [i], Rs [i]) ;
  20    950	    #####:  945:			for (i = 0 ; i < n ; i++)
  20    952	    #####:  947:			    SCALE_DIV (Z [i], Rs [i]) ;
  24   1316	    #####: 1311:	    omega [1] = tau ;
  24   1317	    #####: 1312:	    omega [2] = tau ;
  24   1318	    #####: 1313:	    break ;
   4   1372	    #####: 1367:	    for (i = 0 ; i < n ; i++)
   4   1374	    #####: 1369:		X [i] = S [i] ;
   4   1376	    #####: 1371:	    Info [UMFPACK_OMEGA1] = last_omega [1] ;
   4   1377	    #####: 1372:	    Info [UMFPACK_OMEGA2] = last_omega [2] ;
================================================================================
================================================================================
umf_start_front.c
================================================================================
================================================================================
  24    156	    #####:  151:	maxfrsize = Int_MAX / sizeof (Entry) ;
  24    175	    #####:  170:	    fsize = Int_MAX / sizeof (Entry) ;
  24    193	    #####:  188:		fsize2 = Int_MAX / sizeof (Entry) ;
================================================================================
================================================================================
umf_store_lu.c
================================================================================
================================================================================
  24    349	    #####:  344:		return (FALSE) ;	/* out of memory */
  24    355	    #####:  350:		return (FALSE) ;	/* out of memory */
  24    774	    #####:  769:		return (FALSE) ;	/* out of memory */
  24    781	    #####:  776:		return (FALSE) ;	/* out of memory */
================================================================================
================================================================================
umf_store_lu_drop.c
================================================================================
================================================================================
  24    332	    #####:  327:	    if (Work->do_grow)
  24    336	    #####:  331:		r2 = fnrows ;
  24    337	    #####:  332:		c2 = fncols ;
  24    342	    #####:  337:		r2 = MAX (fnrows, Work->fnrows_new + 1) ;
  24    343	    #####:  338:		c2 = MAX (fncols, Work->fncols_new + 1) ;
  24    346	    #####:  341:	    if (!UMF_get_memory (Numeric, Work, size, r2, c2, TRUE))
  24    349	    #####:  344:		return (FALSE) ;	/* out of memory */
  24    351	    #####:  346:	    p = UMF_mem_alloc_head_block (Numeric, size) ;
  24    352	    #####:  347:	    if (!p)
  24    355	    #####:  350:		return (FALSE) ;	/* out of memory */
  24    358	    #####:  353:	    fnc_curr = Work->fnc_curr ;
  24    359	    #####:  354:	    fnr_curr = Work->fnr_curr ;
  24    360	    #####:  355:	    Flublock = Work->Flublock ;
  24    361	    #####:  356:	    Flblock  = Work->Flblock ;
  24    362	    #####:  357:	    Fublock  = Work->Fublock ;
  24    363	    #####:  358:	    Fl1 = Flublock + kk * nb ;
  24    364	    #####:  359:	    Fl2 = Flblock  + kk * fnr_curr ;
  24    477	    #####:  472:			pos = llen++ ;
  24    478	    #####:  473:			Lpattern [pos] = row2 ;
  24    479	    #####:  474:			Lpos [row2] = pos ;
  24    480	    #####:  475:			*Li++ = row2 ;
  24    497	    #####:  492:			pos = llen++ ;
  24    498	    #####:  493:			Lpattern [pos] = row2 ;
  24    499	    #####:  494:			Lpos [row2] = pos ;
  24    500	    #####:  495:			*Li++ = row2 ;
  24    756	    #####:  751:	    if (Work->do_grow)
  24    760	    #####:  755:		r2 = fnrows ;
  24    761	    #####:  756:		c2 = fncols ;
  24    766	    #####:  761:		r2 = MAX (fnrows, Work->fnrows_new + 1) ;
  24    767	    #####:  762:		c2 = MAX (fncols, Work->fncols_new + 1) ;
  24    770	    #####:  765:	    if (!UMF_get_memory (Numeric, Work, size, r2, c2, TRUE))
  24    774	    #####:  769:		return (FALSE) ;	/* out of memory */
  24    776	    #####:  771:	    p = UMF_mem_alloc_head_block (Numeric, size) ;
  24    777	    #####:  772:	    if (!p)
  24    781	    #####:  776:		return (FALSE) ;	/* out of memory */
  24    784	    #####:  779:	    fnc_curr = Work->fnc_curr ;
  24    785	    #####:  780:	    fnr_curr = Work->fnr_curr ;
  24    786	    #####:  781:	    Flublock = Work->Flublock ;
  24    787	    #####:  782:	    Flblock  = Work->Flblock ;
  24    788	    #####:  783:	    Fublock  = Work->Fublock ;
  24    789	    #####:  784:	    Fu1 = Flublock + kk ;
  24    790	    #####:  785:	    Fu2 = Fublock  + kk * fnc_curr ;
================================================================================
================================================================================
umf_symbolic_usage.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_transpose.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_triplet_map_nox.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_triplet_map_x.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_triplet_nomap_nox.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_triplet_nomap_x.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_tuple_lengths.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_uhsolve.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_usolve.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_utsolve.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_valid_numeric.c
================================================================================
================================================================================
================================================================================
================================================================================
umf_valid_symbolic.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_col_to_triplet.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_defaults.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_free_numeric.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_free_symbolic.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_get_determinant.c
================================================================================
================================================================================
  24    219	    #####:  214:		Info [UMFPACK_STATUS] = UMFPACK_WARNING_singular_matrix ;
  24    220	    #####:  215:		break ;
================================================================================
================================================================================
umfpack_get_lunz.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_get_numeric.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_get_symbolic.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_load_numeric.c
================================================================================
================================================================================
  24    101	    #####:   96:	(void) UMF_free ((void *) Numeric) ;
  24    102	    #####:   97:	fclose (f) ;
  24    103	    #####:   98:	return (UMFPACK_ERROR_file_IO) ;
  24    160	    #####:  155:	UMFPACK_free_numeric ((void **) &Numeric) ;
  24    161	    #####:  156:	return (UMFPACK_ERROR_invalid_Numeric_object) ;
================================================================================
================================================================================
umfpack_load_symbolic.c
================================================================================
================================================================================
  24    101	    #####:   96:	(void) UMF_free ((void *) Symbolic) ;
  24    102	    #####:   97:	fclose (f) ;
  24    103	    #####:   98:	return (UMFPACK_ERROR_file_IO) ;
  24    164	    #####:  159:	UMFPACK_free_symbolic ((void **) &Symbolic) ;
  24    165	    #####:  160:	return (UMFPACK_ERROR_invalid_Symbolic_object) ;
================================================================================
================================================================================
umfpack_numeric.c
================================================================================
================================================================================
  24    189	    #####:  184:	Info [UMFPACK_STATUS] = UMFPACK_ERROR_out_of_memory ;
  24    190	    #####:  185:	return (UMFPACK_ERROR_out_of_memory) ;
================================================================================
================================================================================
umfpack_qsymbolic.c
================================================================================
================================================================================
  24    928	    #####:  923:	Info [UMFPACK_STATUS] = UMFPACK_ERROR_out_of_memory ;
  24    929	    #####:  924:	return (UMFPACK_ERROR_out_of_memory) ;
  24   1739	    #####: 1734:	    Info [UMFPACK_STATUS] = UMFPACK_ERROR_internal_error ;
  24   1740	    #####: 1735:	    error (&Symbolic, SW) ;
  24   1741	    #####: 1736:	    return (UMFPACK_ERROR_internal_error) ;
  24   2085	    #####: 2080:	    Info [UMFPACK_STATUS] = UMFPACK_ERROR_out_of_memory ;
  24   2086	    #####: 2081:	    error (&Symbolic, SW) ;
  24   2087	    #####: 2082:	    return (UMFPACK_ERROR_out_of_memory) ;
================================================================================
================================================================================
umfpack_report_control.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_report_info.c
================================================================================
================================================================================
   4    516	    #####:  511:	PRINT_INFO (
   4    522	    #####:  517:	PRINT_INFO (
   4    531	    #####:  526:	ttot = tsym + tnum ;
   4    532	    #####:  527:	PRINT_INFO ("    symbolic + numeric CPU time (sec):             %.2f\n",
   4    534	    #####:  529:	if (ftot > 0 && ttot > TMIN)
   4    536	    #####:  531:	    PRINT_INFO (
   4    545	    #####:  540:	twtot = twsym + twnum ;
   4    546	    #####:  541:	PRINT_INFO ("    symbolic + numeric wall clock time (sec):      %.2f\n",
   4    548	    #####:  543:	if (ftot > 0 && twtot > TMIN)
   4    550	    #####:  545:	    PRINT_INFO (
   4    580	    #####:  575:	PRINT_INFO (
   4    586	    #####:  581:	PRINT_INFO (
   4    600	    #####:  595:	if (ttot >= TMIN && ftot >= 0)
  13    602	    #####:  597:	    ttot += tsolve ;
  13    603	    #####:  598:	    PRINT_INFO (
  13    606	    #####:  601:	    if (ftot > 0 && ttot > TMIN)
  13    608	    #####:  603:		PRINT_INFO (
   4    617	    #####:  612:	if (twtot >= TMIN && ftot >= 0)
  23    619	    #####:  614:	    twtot += tsolve ;
  23    620	    #####:  615:	    PRINT_INFO (
  23    623	    #####:  618:	    if (ftot > 0 && twtot > TMIN)
  23    625	    #####:  620:		PRINT_INFO (
================================================================================
================================================================================
umfpack_report_matrix.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_report_numeric.c
================================================================================
================================================================================
  24    326	    #####:  321:		return (FALSE) ;
  24    332	    #####:  327:		PRINTF (("\t...\n")) ;
  24    333	    #####:  328:		prl-- ;
  24    534	    #####:  529:	    return (FALSE) ;
  24    641	    #####:  636:	    PRINTF (("    ...\n")) ;
  24    642	    #####:  637:	    prl-- ;
  24    653	    #####:  648:		return (FALSE) ;
  24    659	    #####:  654:		PRINTF (("\t...\n")) ;
  24    660	    #####:  655:		prl-- ;
================================================================================
================================================================================
umfpack_report_perm.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_report_status.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_report_symbolic.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_report_triplet.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_report_vector.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_save_numeric.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_save_symbolic.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_scale.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_solve.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_symbolic.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_tictoc.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_timer.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_transpose.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_triplet_to_col.c
================================================================================
================================================================================
================================================================================
================================================================================
umfpack_wsolve.c
================================================================================
================================================================================
  24    146	    #####:  141:	Info [UMFPACK_STATUS] = UMFPACK_ERROR_invalid_system ;
  24    147	    #####:  142:	return (UMFPACK_ERROR_invalid_system) ;
  24    160	    #####:  155:	Info [UMFPACK_STATUS] = UMFPACK_ERROR_argument_missing ;
  24    161	    #####:  156:	return (UMFPACK_ERROR_argument_missing) ;
  24    167	    #####:  162:	irstep = 0 ;
================================================================================
================================================================================
amd_1.c
================================================================================
================================================================================
================================================================================
================================================================================
amd_2.c
================================================================================
================================================================================
================================================================================
================================================================================
amd_aat.c
================================================================================
================================================================================
================================================================================
================================================================================
amd_control.c
================================================================================
================================================================================
================================================================================
================================================================================
amd_defaults.c
================================================================================
================================================================================
================================================================================
================================================================================
amd_info.c
================================================================================
================================================================================
  12     63	    #####:   58:	PRINTF (("OK, but jumbled\n")) ;
================================================================================
================================================================================
amd_order.c
================================================================================
================================================================================
  24     84	    #####:   79:	if (info) Info [AMD_STATUS] = AMD_OUT_OF_MEMORY ;
  24     85	    #####:   80:	return (AMD_OUT_OF_MEMORY) ;	    /* problem too large */
  24    105	    #####:  100:	amd_free (Len) ;
  24    106	    #####:  101:	amd_free (Pinv) ;
  24    107	    #####:  102:	if (info) Info [AMD_STATUS] = AMD_OUT_OF_MEMORY ;
  24    108	    #####:  103:	return (AMD_OUT_OF_MEMORY) ;
  24    122	    #####:  117:	    amd_free (Rp) ;
  24    123	    #####:  118:	    amd_free (Ri) ;
  24    124	    #####:  119:	    amd_free (Len) ;
  24    125	    #####:  120:	    amd_free (Pinv) ;
  24    126	    #####:  121:	    if (info) Info [AMD_STATUS] = AMD_OUT_OF_MEMORY ;
  24    127	    #####:  122:	    return (AMD_OUT_OF_MEMORY) ;
  24    175	    #####:  170:	amd_free (Rp) ;
  24    176	    #####:  171:	amd_free (Ri) ;
  24    177	    #####:  172:	amd_free (Len) ;
  24    178	    #####:  173:	amd_free (Pinv) ;
  24    179	    #####:  174:	if (info) Info [AMD_STATUS] = AMD_OUT_OF_MEMORY ;
  24    180	    #####:  175:	return (AMD_OUT_OF_MEMORY) ;
================================================================================
================================================================================
amd_postorder.c
================================================================================
================================================================================
================================================================================
================================================================================
amd_post_tree.c
================================================================================
================================================================================
================================================================================
================================================================================
amd_preprocess.c
================================================================================
================================================================================
================================================================================
================================================================================
amd_valid.c
================================================================================
================================================================================
================================================================================
================================================================================
Last line of each output file: 
================================================================================
================================================================================
Out/1_di/ut.out
ALL TESTS PASSED: rnorm 2.22e-10 (1.79e-07 shl0, 9.16e-05 arc130 8.81e-08 omega2) cputime 45.7908
=================================================================
=================================================================
Out/1_dl/ut.out
ALL TESTS PASSED: rnorm 2.22e-10 (1.79e-07 shl0, 9.16e-05 arc130 8.81e-08 omega2) cputime 38.8087
=================================================================
=================================================================
Out/1_zi/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.79e-07 shl0, 9.28e-05 arc130 1.12e-09 omega2) cputime 48.5196
=================================================================
=================================================================
Out/1_zl/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.79e-07 shl0, 9.28e-05 arc130 1.12e-09 omega2) cputime 52.2112
=================================================================
=================================================================
Out/1g_di/ut.out
ALL TESTS PASSED: rnorm 2.22e-10 (1.79e-07 shl0, 9.16e-05 arc130 8.81e-08 omega2) cputime 31.2806
=================================================================
=================================================================
Out/1g_dl/ut.out
ALL TESTS PASSED: rnorm 2.22e-10 (1.79e-07 shl0, 9.16e-05 arc130 8.81e-08 omega2) cputime 29.5608
=================================================================
=================================================================
Out/1g_zi/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.79e-07 shl0, 9.28e-05 arc130 1.12e-09 omega2) cputime 35.7843
=================================================================
=================================================================
Out/1g_zl/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.79e-07 shl0, 9.28e-05 arc130 1.12e-09 omega2) cputime 38.8719
=================================================================
=================================================================
Out/2_di/ut.out
ALL TESTS PASSED: rnorm 2.22e-10 (1.79e-07 shl0, 9.16e-05 arc130 6.67e-08 omega2) cputime 44.2427
=================================================================
=================================================================
Out/2_dl/ut.out
ALL TESTS PASSED: rnorm 2.22e-10 (1.79e-07 shl0, 9.16e-05 arc130 6.67e-08 omega2) cputime 39.5366
=================================================================
=================================================================
Out/2_zi/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.79e-07 shl0, 9.28e-05 arc130 8.81e-10 omega2) cputime 49.9545
=================================================================
=================================================================
Out/2_zl/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.79e-07 shl0, 9.28e-05 arc130 8.81e-10 omega2) cputime 53.293
=================================================================
=================================================================
Out/2g_di/ut.out
ALL TESTS PASSED: rnorm 2.22e-10 (1.79e-07 shl0, 9.16e-05 arc130 6.67e-08 omega2) cputime 34.071
=================================================================
=================================================================
Out/2g_dl/ut.out
ALL TESTS PASSED: rnorm 2.22e-10 (1.79e-07 shl0, 9.16e-05 arc130 6.67e-08 omega2) cputime 33.6282
=================================================================
=================================================================
Out/2g_zi/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.79e-07 shl0, 9.28e-05 arc130 8.81e-10 omega2) cputime 38.763
=================================================================
=================================================================
Out/2g_zl/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.79e-07 shl0, 9.28e-05 arc130 8.81e-10 omega2) cputime 41.2351
=================================================================
=================================================================
Out/5_di/ut.out
ALL TESTS PASSED: rnorm 2.22e-10 (1.79e-07 shl0, 7.63e-05 arc130 3.54e-08 omega2) cputime 45.3118
=================================================================
=================================================================
Out/5_dl/ut.out
ALL TESTS PASSED: rnorm 2.22e-10 (1.79e-07 shl0, 7.63e-05 arc130 3.54e-08 omega2) cputime 37.6796
=================================================================
=================================================================
Out/5_zi/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.79e-07 shl0, 7.78e-05 arc130 1.44e-09 omega2) cputime 48.316
=================================================================
=================================================================
Out/5_zl/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.79e-07 shl0, 7.78e-05 arc130 1.44e-09 omega2) cputime 51.3542
=================================================================
=================================================================
Out/6_di/ut.out
ALL TESTS PASSED: rnorm 2.22e-10 (1.79e-07 shl0, 9.16e-05 arc130 6.67e-08 omega2) cputime 0
=================================================================
=================================================================
Out/6_dl/ut.out
ALL TESTS PASSED: rnorm 2.22e-10 (1.79e-07 shl0, 9.16e-05 arc130 6.67e-08 omega2) cputime 0
=================================================================
=================================================================
Out/6_zi/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.79e-07 shl0, 9.28e-05 arc130 8.81e-10 omega2) cputime 0
=================================================================
=================================================================
Out/6_zl/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.79e-07 shl0, 9.28e-05 arc130 8.81e-10 omega2) cputime 0
=================================================================
=================================================================
Out/7_di/ut.out
ALL TESTS PASSED: rnorm 2.22e-10 (1.79e-07 shl0, 9.16e-05 arc130 8.81e-08 omega2) cputime 45.4104
=================================================================
=================================================================
Out/7_dl/ut.out
ALL TESTS PASSED: rnorm 2.22e-10 (1.79e-07 shl0, 9.16e-05 arc130 8.81e-08 omega2) cputime 45.932
=================================================================
=================================================================
Out/7_zi/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.79e-07 shl0, 9.28e-05 arc130 1.12e-09 omega2) cputime 67.8343
=================================================================
=================================================================
Out/7_zl/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.79e-07 shl0, 9.28e-05 arc130 1.12e-09 omega2) cputime 52.5558
=================================================================
=================================================================
Out/8_di/ut.out
ALL TESTS PASSED: rnorm 2.22e-10 (1.79e-07 shl0, 9.16e-05 arc130 6.67e-08 omega2) cputime 45.255
=================================================================
=================================================================
Out/8_dl/ut.out
ALL TESTS PASSED: rnorm 2.22e-10 (1.79e-07 shl0, 9.16e-05 arc130 6.67e-08 omega2) cputime 39.5571
=================================================================
=================================================================
Out/8_zi/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.79e-07 shl0, 9.28e-05 arc130 8.81e-10 omega2) cputime 51.0877
=================================================================
=================================================================
Out/8_zl/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.79e-07 shl0, 9.28e-05 arc130 8.81e-10 omega2) cputime 54.2804
=================================================================
=================================================================
